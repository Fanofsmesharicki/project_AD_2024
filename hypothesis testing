{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "from scipy.stats import mannwhitneyu\n",
        "import pandas as pd\n",
        "from scipy.stats import ttest_ind\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import numpy as np\n",
        "from scipy.stats import kruskal\n"
      ],
      "metadata": {
        "id": "Z-3E1q3qmHA_"
      },
      "execution_count": 114,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "file_path = '/content/drive/My Drive/Colab Notebooks/lol.xlsx'\n",
        "df = pd.read_excel(file_path, engine='openpyxl')\n",
        "df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "0diKv7XoT9Jl",
        "outputId": "366373c6-b32c-4789-8732-c10cb09b20d6"
      },
      "execution_count": 106,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Unnamed: 0        Фамилия Имя  Возраст игрока Национальность  \\\n",
              "0             0      Kylian Mbappé              25        Франция   \n",
              "1             1     Erling Haaland              23       Норвегия   \n",
              "2             2    Jude Bellingham              20         Англия   \n",
              "3             3        Bukayo Saka              22         Англия   \n",
              "4             4         Phil Foden              23         Англия   \n",
              "..          ...                ...             ...            ...   \n",
              "201         201    Fredrik Aursnes              28       Норвегия   \n",
              "202         202      Álvaro Morata              31        Испания   \n",
              "203         203       Oscar Gloukh              20        Израиль   \n",
              "204         204     Miguel Almirón              30       Парагвай   \n",
              "205         205  Aaron Wan-Bissaka              26         Англия   \n",
              "\n",
              "          Позиция на поле            Лига                Клуб  Стоимость  \\\n",
              "0        Центральный нап.          Лига 1     Пари Сен-Жермен        180   \n",
              "1        Центральный нап.             АПЛ      Манчестер Сити        180   \n",
              "2      Атак. полузащитник         Ла лига         Реал Мадрид        180   \n",
              "3           Правый Вингер             АПЛ             Арсенал        130   \n",
              "4           Правый Вингер             АПЛ      Манчестер Сити        130   \n",
              "..                    ...             ...                 ...        ...   \n",
              "201  Опорный полузащитник  annother leage             Бенфика         20   \n",
              "202      Центральный нап.         Ла лига     Атлетико Мадрид         20   \n",
              "203    Атак. полузащитник  annother leage  Ред Булл Зальцбург         20   \n",
              "204         Правый Вингер             АПЛ     Ньюкасл Юнайтед         20   \n",
              "205       Правый защитник             АПЛ   Манчестер Юнайтед         20   \n",
              "\n",
              "             Турнир  Минут на поле в розыгрыше  ...  Прогрессивный пас  \\\n",
              "0    Лига Чемпионов                        900  ...                 56   \n",
              "1    Лига Чемпионов                        776  ...                 11   \n",
              "2    Лига Чемпионов                        742  ...                 56   \n",
              "3    Лига Чемпионов                        720  ...                 22   \n",
              "4    Лига Чемпионов                        681  ...                 53   \n",
              "..              ...                        ...  ...                ...   \n",
              "201  Лига Чемпионов                        540  ...                 24   \n",
              "202  Лига Чемпионов                        665  ...                  6   \n",
              "203  Лига Чемпионов                        476  ...                 25   \n",
              "204  Лига Чемпионов                        413  ...                 23   \n",
              "205  Лига Чемпионов                        212  ...                 10   \n",
              "\n",
              "     Прогресивные пасы не дошедшие до получателя  Коэффициент голов за минуту  \\\n",
              "0                                            125                     0.008889   \n",
              "1                                             43                     0.007732   \n",
              "2                                             56                     0.005391   \n",
              "3                                             89                     0.005556   \n",
              "4                                             89                     0.007342   \n",
              "..                                           ...                          ...   \n",
              "201                                           37                     0.000000   \n",
              "202                                           39                     0.007519   \n",
              "203                                           26                     0.004202   \n",
              "204                                           30                     0.002421   \n",
              "205                                            4                     0.000000   \n",
              "\n",
              "     Коэффициент голевых передач за минуту  \\\n",
              "0                                 0.000000   \n",
              "1                                 0.001289   \n",
              "2                                 0.005391   \n",
              "3                                 0.005556   \n",
              "4                                 0.005874   \n",
              "..                                     ...   \n",
              "201                               0.001852   \n",
              "202                               0.001504   \n",
              "203                               0.002101   \n",
              "204                               0.002421   \n",
              "205                               0.004717   \n",
              "\n",
              "     Коэффициент голов + голевых передач за минуту  \\\n",
              "0                                         0.008889   \n",
              "1                                         0.009021   \n",
              "2                                         0.010782   \n",
              "3                                         0.011111   \n",
              "4                                         0.013216   \n",
              "..                                             ...   \n",
              "201                                       0.001852   \n",
              "202                                       0.009023   \n",
              "203                                       0.006303   \n",
              "204                                       0.004843   \n",
              "205                                       0.004717   \n",
              "\n",
              "     Коэффициент прогрессивных переносов за минуту  \\\n",
              "0                                         0.072222   \n",
              "1                                         0.009021   \n",
              "2                                         0.039084   \n",
              "3                                         0.056944   \n",
              "4                                         0.033774   \n",
              "..                                             ...   \n",
              "201                                       0.018519   \n",
              "202                                       0.018045   \n",
              "203                                       0.033613   \n",
              "204                                       0.043584   \n",
              "205                                       0.014151   \n",
              "\n",
              "     Коэффициент прогрессивных пасов за минуту  \\\n",
              "0                                     0.062222   \n",
              "1                                     0.014175   \n",
              "2                                     0.075472   \n",
              "3                                     0.030556   \n",
              "4                                     0.077827   \n",
              "..                                         ...   \n",
              "201                                   0.044444   \n",
              "202                                   0.009023   \n",
              "203                                   0.052521   \n",
              "204                                   0.055690   \n",
              "205                                   0.047170   \n",
              "\n",
              "     Коэффициент неудачных прогрессивных пасов за минуту  \\\n",
              "0                                             0.138889     \n",
              "1                                             0.055412     \n",
              "2                                             0.075472     \n",
              "3                                             0.123611     \n",
              "4                                             0.130690     \n",
              "..                                                 ...     \n",
              "201                                           0.068519     \n",
              "202                                           0.058647     \n",
              "203                                           0.054622     \n",
              "204                                           0.072639     \n",
              "205                                           0.018868     \n",
              "\n",
              "     Успешные прогрессивные пасы  Коэффициент успешных прогрессивных пасов  \n",
              "0                            -69                                 -1.232143  \n",
              "1                            -32                                 -2.909091  \n",
              "2                              0                                  0.000000  \n",
              "3                            -67                                 -3.045455  \n",
              "4                            -36                                 -0.679245  \n",
              "..                           ...                                       ...  \n",
              "201                          -13                                 -0.541667  \n",
              "202                          -33                                 -5.500000  \n",
              "203                           -1                                 -0.040000  \n",
              "204                           -7                                 -0.304348  \n",
              "205                            6                                  0.600000  \n",
              "\n",
              "[206 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d19421ef-031a-46c8-bc6a-2a6a46b90861\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Фамилия Имя</th>\n",
              "      <th>Возраст игрока</th>\n",
              "      <th>Национальность</th>\n",
              "      <th>Позиция на поле</th>\n",
              "      <th>Лига</th>\n",
              "      <th>Клуб</th>\n",
              "      <th>Стоимость</th>\n",
              "      <th>Турнир</th>\n",
              "      <th>Минут на поле в розыгрыше</th>\n",
              "      <th>...</th>\n",
              "      <th>Прогрессивный пас</th>\n",
              "      <th>Прогресивные пасы не дошедшие до получателя</th>\n",
              "      <th>Коэффициент голов за минуту</th>\n",
              "      <th>Коэффициент голевых передач за минуту</th>\n",
              "      <th>Коэффициент голов + голевых передач за минуту</th>\n",
              "      <th>Коэффициент прогрессивных переносов за минуту</th>\n",
              "      <th>Коэффициент прогрессивных пасов за минуту</th>\n",
              "      <th>Коэффициент неудачных прогрессивных пасов за минуту</th>\n",
              "      <th>Успешные прогрессивные пасы</th>\n",
              "      <th>Коэффициент успешных прогрессивных пасов</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>Kylian Mbappé</td>\n",
              "      <td>25</td>\n",
              "      <td>Франция</td>\n",
              "      <td>Центральный нап.</td>\n",
              "      <td>Лига 1</td>\n",
              "      <td>Пари Сен-Жермен</td>\n",
              "      <td>180</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>900</td>\n",
              "      <td>...</td>\n",
              "      <td>56</td>\n",
              "      <td>125</td>\n",
              "      <td>0.008889</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008889</td>\n",
              "      <td>0.072222</td>\n",
              "      <td>0.062222</td>\n",
              "      <td>0.138889</td>\n",
              "      <td>-69</td>\n",
              "      <td>-1.232143</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>23</td>\n",
              "      <td>Норвегия</td>\n",
              "      <td>Центральный нап.</td>\n",
              "      <td>АПЛ</td>\n",
              "      <td>Манчестер Сити</td>\n",
              "      <td>180</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>776</td>\n",
              "      <td>...</td>\n",
              "      <td>11</td>\n",
              "      <td>43</td>\n",
              "      <td>0.007732</td>\n",
              "      <td>0.001289</td>\n",
              "      <td>0.009021</td>\n",
              "      <td>0.009021</td>\n",
              "      <td>0.014175</td>\n",
              "      <td>0.055412</td>\n",
              "      <td>-32</td>\n",
              "      <td>-2.909091</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>Jude Bellingham</td>\n",
              "      <td>20</td>\n",
              "      <td>Англия</td>\n",
              "      <td>Атак. полузащитник</td>\n",
              "      <td>Ла лига</td>\n",
              "      <td>Реал Мадрид</td>\n",
              "      <td>180</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>742</td>\n",
              "      <td>...</td>\n",
              "      <td>56</td>\n",
              "      <td>56</td>\n",
              "      <td>0.005391</td>\n",
              "      <td>0.005391</td>\n",
              "      <td>0.010782</td>\n",
              "      <td>0.039084</td>\n",
              "      <td>0.075472</td>\n",
              "      <td>0.075472</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>Bukayo Saka</td>\n",
              "      <td>22</td>\n",
              "      <td>Англия</td>\n",
              "      <td>Правый Вингер</td>\n",
              "      <td>АПЛ</td>\n",
              "      <td>Арсенал</td>\n",
              "      <td>130</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>720</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>89</td>\n",
              "      <td>0.005556</td>\n",
              "      <td>0.005556</td>\n",
              "      <td>0.011111</td>\n",
              "      <td>0.056944</td>\n",
              "      <td>0.030556</td>\n",
              "      <td>0.123611</td>\n",
              "      <td>-67</td>\n",
              "      <td>-3.045455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>23</td>\n",
              "      <td>Англия</td>\n",
              "      <td>Правый Вингер</td>\n",
              "      <td>АПЛ</td>\n",
              "      <td>Манчестер Сити</td>\n",
              "      <td>130</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>681</td>\n",
              "      <td>...</td>\n",
              "      <td>53</td>\n",
              "      <td>89</td>\n",
              "      <td>0.007342</td>\n",
              "      <td>0.005874</td>\n",
              "      <td>0.013216</td>\n",
              "      <td>0.033774</td>\n",
              "      <td>0.077827</td>\n",
              "      <td>0.130690</td>\n",
              "      <td>-36</td>\n",
              "      <td>-0.679245</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>201</th>\n",
              "      <td>201</td>\n",
              "      <td>Fredrik Aursnes</td>\n",
              "      <td>28</td>\n",
              "      <td>Норвегия</td>\n",
              "      <td>Опорный полузащитник</td>\n",
              "      <td>annother leage</td>\n",
              "      <td>Бенфика</td>\n",
              "      <td>20</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>540</td>\n",
              "      <td>...</td>\n",
              "      <td>24</td>\n",
              "      <td>37</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.001852</td>\n",
              "      <td>0.001852</td>\n",
              "      <td>0.018519</td>\n",
              "      <td>0.044444</td>\n",
              "      <td>0.068519</td>\n",
              "      <td>-13</td>\n",
              "      <td>-0.541667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>202</th>\n",
              "      <td>202</td>\n",
              "      <td>Álvaro Morata</td>\n",
              "      <td>31</td>\n",
              "      <td>Испания</td>\n",
              "      <td>Центральный нап.</td>\n",
              "      <td>Ла лига</td>\n",
              "      <td>Атлетико Мадрид</td>\n",
              "      <td>20</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>665</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>39</td>\n",
              "      <td>0.007519</td>\n",
              "      <td>0.001504</td>\n",
              "      <td>0.009023</td>\n",
              "      <td>0.018045</td>\n",
              "      <td>0.009023</td>\n",
              "      <td>0.058647</td>\n",
              "      <td>-33</td>\n",
              "      <td>-5.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>203</th>\n",
              "      <td>203</td>\n",
              "      <td>Oscar Gloukh</td>\n",
              "      <td>20</td>\n",
              "      <td>Израиль</td>\n",
              "      <td>Атак. полузащитник</td>\n",
              "      <td>annother leage</td>\n",
              "      <td>Ред Булл Зальцбург</td>\n",
              "      <td>20</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>476</td>\n",
              "      <td>...</td>\n",
              "      <td>25</td>\n",
              "      <td>26</td>\n",
              "      <td>0.004202</td>\n",
              "      <td>0.002101</td>\n",
              "      <td>0.006303</td>\n",
              "      <td>0.033613</td>\n",
              "      <td>0.052521</td>\n",
              "      <td>0.054622</td>\n",
              "      <td>-1</td>\n",
              "      <td>-0.040000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>204</th>\n",
              "      <td>204</td>\n",
              "      <td>Miguel Almirón</td>\n",
              "      <td>30</td>\n",
              "      <td>Парагвай</td>\n",
              "      <td>Правый Вингер</td>\n",
              "      <td>АПЛ</td>\n",
              "      <td>Ньюкасл Юнайтед</td>\n",
              "      <td>20</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>413</td>\n",
              "      <td>...</td>\n",
              "      <td>23</td>\n",
              "      <td>30</td>\n",
              "      <td>0.002421</td>\n",
              "      <td>0.002421</td>\n",
              "      <td>0.004843</td>\n",
              "      <td>0.043584</td>\n",
              "      <td>0.055690</td>\n",
              "      <td>0.072639</td>\n",
              "      <td>-7</td>\n",
              "      <td>-0.304348</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>205</th>\n",
              "      <td>205</td>\n",
              "      <td>Aaron Wan-Bissaka</td>\n",
              "      <td>26</td>\n",
              "      <td>Англия</td>\n",
              "      <td>Правый защитник</td>\n",
              "      <td>АПЛ</td>\n",
              "      <td>Манчестер Юнайтед</td>\n",
              "      <td>20</td>\n",
              "      <td>Лига Чемпионов</td>\n",
              "      <td>212</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.004717</td>\n",
              "      <td>0.004717</td>\n",
              "      <td>0.014151</td>\n",
              "      <td>0.047170</td>\n",
              "      <td>0.018868</td>\n",
              "      <td>6</td>\n",
              "      <td>0.600000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>206 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d19421ef-031a-46c8-bc6a-2a6a46b90861')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d19421ef-031a-46c8-bc6a-2a6a46b90861 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d19421ef-031a-46c8-bc6a-2a6a46b90861');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c12af8a0-7fc9-4c10-8089-7798904314fd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c12af8a0-7fc9-4c10-8089-7798904314fd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c12af8a0-7fc9-4c10-8089-7798904314fd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## У нас есть несколько гипотез:первая из них существует в футбольном мире и я бы хотел ее проверить.Существует устойчивый миф(или не миф,сейчас узнаем),что **АПЛ лига ,в кототрой команлы больше всего любят атаковать**,а в итальянской Серии А ,наоборот не любят позиционные атаки и заточены на обороне"
      ],
      "metadata": {
        "id": "6oKQU7aHgGdR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_filtered=df[['Фамилия Имя', 'Лига', 'Коэффициент голов + голевых передач за минуту','Коэффициент прогрессивных переносов за минуту', 'Коэффициент прогрессивных пасов за минуту']]\n",
        "#Создадим сортированный Дата фрэйм для использования только нужных атакуюищх метрик\n",
        "#Создадим дополнительный признак по сумме атакуюищх дейсвий\n",
        "df_filtered['Сумма атакующих действий'] = (df_filtered['Коэффициент голов + голевых передач за минуту'] +df_filtered['Коэффициент прогрессивных переносов за минуту'] +df_filtered['Коэффициент прогрессивных пасов за минуту'])\n",
        "df_apl = df_filtered[df_filtered['Лига'] == 'АПЛ']\n",
        "df_serie_a = df_filtered[df_filtered['Лига'] == 'Серия А']\n",
        "apl_attacking_actions = df_apl['Сумма атакующих действий']\n",
        "serie_a_attacking_actions = df_serie_a['Сумма атакующих действий']\n",
        "t_test = ttest_ind(apl_attacking_actions, serie_a_attacking_actions, equal_var=False)\n",
        "u_test = mannwhitneyu(apl_attacking_actions, serie_a_attacking_actions)\n",
        "#Расчеты по дефолту делаются для уровня значимости =0.05\n",
        "print(u_test)\n",
        "print(t_test)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "adVwbM6Xihvt",
        "outputId": "1ae95f16-e373-4b7b-a11d-687e38d63bf4"
      },
      "execution_count": 107,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MannwhitneyuResult(statistic=982.0, pvalue=0.026243991389969433)\n",
            "TtestResult(statistic=2.912455536022612, pvalue=0.0049465049620424206, df=63.374999147409234)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-107-d0e9571eeb45>:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_filtered['Сумма атакующих действий'] = (df_filtered['Коэффициент голов + голевых передач за минуту'] +df_filtered['Коэффициент прогрессивных переносов за минуту'] +df_filtered['Коэффициент прогрессивных пасов за минуту'])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Мы проводили тест на равенство атакуюищх действий , но по результатам тестов,можно сказать , ***что АПЛ  более атакующая лига***.Статистика=982,p-value-0,02,то есть значение при котором отвергается нулевая гипотеза о равенстве(отвергается в пользу АПЛ,Статистика=982).T-test сделал больше для красоты и подтверждения,потому что он вроде не так хорошо работает с выборками с разными дисперсиями и данные вроде не обладают нормальным распределением,что так же желательно для t-тестов."
      ],
      "metadata": {
        "id": "UI7GS87zn-TS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **ВАЖНО,я щас буду пробовать бустрап,мы его не проходили,так что я буду пробовать с нуля по гайдам в инете,так что если че не суди строго**"
      ],
      "metadata": {
        "id": "_8BTe-hZq5Tb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def mean_d(k, f):\n",
        "    return np.mean(k) - np.mean(f)\n",
        "#это вроде не машинка,и я не уверен ,как тут будет работать MSE,MAE и прочие всякие штуки,так что я ручками написал просто функцию\n",
        "apl_attacking_actions_v = df_apl['Сумма атакующих действий'].values\n",
        "serie_a_attacking_actions_v = df_serie_a['Сумма атакующих действий'].values\n",
        "\n",
        "# Объединение массивов\n",
        "combined_actions = np.append(apl_attacking_actions_v, serie_a_attacking_actions_v)\n",
        "bootstrap_diffs = np.zeros(4321)\n",
        "#вроде как тут именно масив сохраняется и с ним поудобнее работать\n",
        "for i in range(4321):\n",
        "    sample_apl = np.random.choice(apl_attacking_actions, size=len(apl_attacking_actions), replace=True)#бустрап вроде делают с возвратом,по крайнеей мере пишут так,хотя навернео из-за неопытности мне кажется это странным\n",
        "    sample_serie_a = np.random.choice(serie_a_attacking_actions, size=len(serie_a_attacking_actions), replace=True)\n",
        "    bootstrap_diffs[i] = mean_d(sample_apl, sample_serie_a)\n",
        "lower = np.percentile(bootstrap_diffs, 2.5)\n",
        "upper = np.percentile(bootstrap_diffs, 97.5)\n",
        "print(lower,upper)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bMIlYw6irpHb",
        "outputId": "c126d7b8-f93a-4cf0-a575-e532c9983be5"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.008626341035364166 0.04084503992502227\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "ну получается ,что с 95 процентной вероястностью,можно сказать,что(вроде так работает) в пересчете на игровое время у игроков АПЛ больше голевых действий.То есть разница между игроками АПЛ и игроками Серия А с 95 проц вероястностью лежитв  этом интервале [0.008638831996706176 0.04137916484834663]"
      ],
      "metadata": {
        "id": "l33i3DLczT5n"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Следующая гипотеза:провреим является ли Манчестер сити самой атакующей командой в ЛЧ,в среднем по данным ,если просто взять сумму атакующих действий ,то графики показывают,что это так,проверим на тестах\n"
      ],
      "metadata": {
        "id": "1oZBtUsrzzk7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['Сумма атакующих действий'] = (df['Коэффициент голов + голевых передач за минуту'] +df['Коэффициент прогрессивных переносов за минуту'] +df['Коэффициент прогрессивных пасов за минуту'])\n",
        "df_manchester_city = df[df['Клуб'] == 'Манчестер Сити']\n",
        "df_other_teams = df[df['Клуб'] != 'Манчестер Сити']\n",
        "manchester_city_attacking_actions = df_manchester_city['Сумма атакующих действий'].dropna()\n",
        "other_teams_attacking_actions = df_other_teams['Сумма атакующих действий'].dropna()\n",
        "t_test_result_MC = ttest_ind(manchester_city_attacking_actions, other_teams_attacking_actions, equal_var=False)\n",
        "u_test_MC = mannwhitneyu(manchester_city_attacking_actions, other_teams_attacking_actions)\n",
        "print(t_test_result_MC)\n",
        "print(u_test_MC)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j1AsloZ-0QKk",
        "outputId": "99d11139-a44a-4c29-d52f-11efcecdc1f7"
      },
      "execution_count": 109,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "TtestResult(statistic=3.6904970264614945, pvalue=0.0012623739697923248, df=22.228872397739746)\n",
            "MannwhitneyuResult(statistic=2929.0, pvalue=0.0001395490019633605)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Опять подтверждающаяся гипотеза,pvalue сильно меньше на обоих тестах ,чем уровень 0.05 => отвергаем теорию о том,что манчестер сити равен остальным командам по атакующим действиям и принимаем гипотезу о том,что ***Манчестер сити в среднем самая атакующая команды ЛЧ***"
      ],
      "metadata": {
        "id": "0FFXUMBX3OZ8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def mean_i_love_footbal_lol(d1, d2):\n",
        "    return np.mean(d1) - np.mean(d2)\n",
        "bootstrap_diffs = np.zeros(5050)\n",
        "for i in range(5050):\n",
        "    sample_mc = np.random.choice(manchester_city_attacking_actions, size=len(manchester_city_attacking_actions), replace=True)\n",
        "    sample_other = np.random.choice(other_teams_attacking_actions, size=len(other_teams_attacking_actions), replace=True)\n",
        "    bootstrap_diffs[i] = mean_i_love_footbal_lol(sample_mc, sample_other)\n",
        "\n",
        "low = np.percentile(bootstrap_diffs, 2.5)\n",
        "up = np.percentile(bootstrap_diffs, 97.5)\n",
        "print(low)\n",
        "print(up)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CuSCDM8t3vxE",
        "outputId": "61261759-e3f9-4f67-befc-821e082a7ef1"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.021605675023485434\n",
            "0.06458812102544616\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ну с бустрапом тоже вроде норм все , и гипотеза о том,что МС в среднем самая атакующая команда в ЛЧ подтверждается"
      ],
      "metadata": {
        "id": "Y5LhWPHO4JDx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Тут я хочу проверить гипотезу о том,что с точки зрения действий ведущих к голу,но без учета непосредственно реализации,равные команды.Сравниваю именно эти команды.Потому что одна команда-победитель ЛЧ 2023(МС),а другая главный претендент на победу в ЛЧ 2024(Реализацией в футболе называют условие,при котором действие вело к голу,но гол не был забит)\n"
      ],
      "metadata": {
        "id": "6x3qZGAC4guY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['Прогрессивные действия'] = df['Коэффициент прогрессивных переносов за минуту'] + df['Коэффициент прогрессивных пасов за минуту']\n",
        "\n",
        "# Filter data for Real Madrid, Manchester City and other teams\n",
        "df_real_madrid = df[df['Клуб'] == 'Реал Мадрид']\n",
        "df_manchester_city = df[df['Клуб'] == 'Манчестер Сити']\n",
        "\n",
        "# Extract progressive actions sums for both groups\n",
        "real_madrid_progressive_actions = df_real_madrid['Прогрессивные действия'].dropna()\n",
        "manchester_city_progressive_actions = df_manchester_city['Прогрессивные действия'].dropna()\n",
        "\n",
        "# Mann-Whitney U test\n",
        "u_test_MC_RM = mannwhitneyu(manchester_city_progressive_actions, real_madrid_progressive_actions)\n",
        "print(u_test_MC_RM)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dALdP2Br9Kl4",
        "outputId": "371f854f-50ed-423d-d747-ef37d1ab3bc8"
      },
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MannwhitneyuResult(statistic=174.0, pvalue=0.07512082297763525)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def mean_d1(da1, da2):\n",
        "    return np.mean(da1) - np.mean(da2)\n",
        "bootstrap_diffs = np.zeros(3223)\n",
        "for i in range(3223):\n",
        "    sample_mc = np.random.choice(manchester_city_progressive_actions, size=len(manchester_city_progressive_actions), replace=True)\n",
        "    sample_rm = np.random.choice(real_madrid_progressive_actions, size=len(real_madrid_progressive_actions), replace=True)\n",
        "    bootstrap_diffs[i] = mean_d1(sample_mc, sample_rm)\n",
        "\n",
        "lower1 = np.percentile(bootstrap_diffs, 2.5)\n",
        "upper1 = np.percentile(bootstrap_diffs, 97.5)\n",
        "print(lower1,upper1)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nac5c4G59gyt",
        "outputId": "e331d9d2-9fc4-4f14-9921-05b3a05cdb0f"
      },
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.0036949653941625513 0.05543128220878538\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Тут уже есть некоторые разногласия,НО возьмем точку зрения U теста , и скажем,что ,если говорить только лишь о действиях ведущих к голу,команды равны"
      ],
      "metadata": {
        "id": "QX_f_s1N-X2V"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Проверим ,что игроки трех основных сборных претендентов на победы на Евро2024 (Англия,Испания,Франция)**имеют равные атакующие способоности**"
      ],
      "metadata": {
        "id": "xzO8_Q0__u0y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['Сумма атакующих действий'] = (\n",
        "    df['Коэффициент голов + голевых передач за минуту'] +\n",
        "    df['Коэффициент прогрессивных переносов за минуту'] +\n",
        "    df['Коэффициент прогрессивных пасов за минуту']\n",
        ")\n",
        "df_spanish = df[df['Национальность'] == 'Испания']\n",
        "df_english = df[df['Национальность'] == 'Англия']\n",
        "df_french = df[df['Национальность'] == 'Франция']\n",
        "\n",
        "# Extract the sum of attacking actions for each group\n",
        "spanish_attacking_actions = df_spanish['Сумма атакующих действий'].dropna()\n",
        "english_attacking_actions = df_english['Сумма атакующих действий'].dropna()\n",
        "french_attacking_actions = df_french['Сумма атакующих действий'].dropna()\n",
        "kruskal_test_result = kruskal(spanish_attacking_actions, english_attacking_actions, french_attacking_actions)\n",
        "print(, kruskal_test_result)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DHOSB4mj_K_K",
        "outputId": "84c95185-56ce-4aa8-9af4-6501b60d8fb1"
      },
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Kruskal-Wallis H-test result: KruskalResult(statistic=1.935218741006295, pvalue=0.37999036931029384)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Тут чуть помог Chat Gpt по запросу какой делать тест для сравнения трех выборок,он посоветовал вот этот тест ,и сказал что это специализированные тест.В целом тест показал,что гипотеза не отвергается,и что скорее всего в плане атакующего потенциала и с точки зрения индивидуальной игры,сборные равны"
      ],
      "metadata": {
        "id": "ti6HFC7q_jGt"
      }
    }
  ]
}
